package com.sgs.citytax.util

import com.sgs.citytax.BuildConfig
import java.text.DecimalFormat

object Constant {
    const val NODES_ID_SEPARATOR = ":"
    const val KEY_PARENT_TYPE = "KEY_PARENT_TYPE"
    const val KEY_GEO_AREA_LATLONG = "GEO_AREA_LATLONG"
    const val KEY_PARENT_GEO_AREA_LATLONG = "KEY_PARENT_GEO_AREA_LATLONG"
    const val KEY_LAND_GEO_AREA_LATLONG = "KEY_LAND_GEO_AREA_LATLONG"
    const val KEY_MAP_AREA = "KEY_MAP_AREA"
    const val KEY_ACCOUNT_ID = "ACCOUNT_ID"
    const val KEY_CUSTOMER_NAME = "CUSTOMER_NAME"
    const val KEY_CUSTOMER_ID = "CUSTOMER_ID"
    const val KEY_ADVANCE_RECEIVED_ID = "ADVANCE_RECEIVED_ID"
    const val KEY_TAX_INVOICE_ID = "TAX_INVOICE_ID"
    const val KEY_AGENT = "AGENT"
    const val KEY_FROM_PROFILE = "FROM_PROFILE"
    const val KEY_VIOLATION_VALUE = "KEY_VIOLATION_VALUE"
    const val KEY_SELECTED_COMBI_VALUE = "KEY_SELECTED_COMBI_VALUE"
    const val KEY_SELECTED_COMBI_CODE = "KEY_SELECTED_COMBI_CODE"
    const val KEY_AGENT_TYPE = "AGENT_TYPE"
    const val KEY_SYCO_TAX_ID = "SYCO_TAX_ID"
    const val KEY_VEHICLE_DETAILS = "KEY_VEHICLE_DETAILS"
    const val KEY_QUICK_MENU = "QUICK_MENU"
    const val KEY_BUSINESS_MODE = "BUSINESS_MODE"
    const val KEY_QUICK_ACCTID = "QUICK_ACCTID"
    const val KEY_PROPERTY_TYPE = "KEY_PROPERTY_TYPE"
    const val KEY_SCREEN_MODE = "SCREEN_MODE"
    const val KEY_QR_CODE_DATA = "QR_CODE_DATA"
    const val KEY_RECEIPT_TYPE = "RECEIPT_TYPE"
    const val KEY_BUSINESS_OWNER = "BUSINESS_OWNER"
    const val KEY_BUSINESS = "BUSINESS"
    const val KEY_TABLE_NAME = "TABLE_NAME"
    const val KEY_PRIMARY_KEY = "PRIMARY_KEY"
    const val KEY_PROPERTY_OWNERSHIP = "KEY_PROPERTY_OWNERSHIP"
    const val KEY_ACCOUNT_EMAILS = "CRM_ACCOUNT_EMAILS"
    const val KEY_RENTAL_DETAILS = "RENTAL_DETAILS"
    const val KEY_PHONE = "PHONE"
    const val KEY_VEHICLE_OWNERSHIP = "VEHICLE_OWNERSHIP"
    const val KEY_VEHICLE_OWNERSHIP_DETAILS = "VEHICLE_OWNERSHIP_DETAILS"
    const val KEY_NOTES = "NOTES"
    const val KEY_ADDRESS = "ADDRESS"
    const val KEY_PROPERTY_OWNER = "PROPERTY_OWNER"
    const val KEY_PROPERTY_NOMINEE = "KEY_PROPERTY_NOMINEE"
    const val KEY_CORPORATE_TURNOVER = "CORPORATE_TURNOVER"
    const val KEY_DOCUMENT = "DOCUMENT"
    const val KEY_AGREEMENT_DOCUMENT = "AGREEMENT_DOCUMENT"
    const val KEY_IS_PUBLIC_DOMAIN_OCCUPANCY = "PUBLIC_DOMAIN_OCCUPANCY"
    const val KEY_PDO_ROP = "PDO_ROP"
    const val KEY_STORE_CUSTOMER_B2B = "STORE_CUSTOMER_B2B"
    const val KEY_ORGANISATION = "ORGANISATION"
    const val KEY_OTP_VALIDATION = "OTP_VALIDATION"
    const val KEY_ESTIMATED_TAX = "ESTIMATED_TAX"
    const val KEY_DOCUMENT_URL = "DOCUMENT_URL"
    const val KEY_DOCUMENT_NAME = "DOCUMENT_NAME"
    const val KEY_NAVIGATION_MENU = "NAVIGATION_MENU"
    const val KEY_RECEIPT_PREVIEW = "RECEIPT_PREVIEW"
    const val KEY_SCAN_PRODUCT_CODE = "SCAN_PRODUCT_CODE"
    const val KEY_NUMBER_OF_CORPORATE_TURNOVER = "NO_OF_CORPORATE_TURNOVER"
    const val KEY_PRODUCT_CODE = "PRODUCT_CODE"
    const val KEY_VOUCHER_NO = "VOUCHER_NO"
    const val KEY_IS_FIRST = "IS_FIRST"
    const val KEY_TAX_RULE_BOOK_CODE = "TAX_RULE_BOOK_CODE"
    const val KEY_GENERATE_TAX_NOTICE_RESPONSE = "GENERATE_TAX_NOTICE_RESPONSE"
    const val KEY_ADVERTISEMENTS = "ADVERTISEMENTS"
    const val KEY_OUT_STANDING = "OUTSTANDING"
    const val KEY_AVAILABLE_DAYS = "AVAILABLE_DAYS"
    const val KEY_ASSET_BOOKING_LINE = "ASSET_BOOKING_LINE"
    const val KEY_ASSET_BOOKING = "ASSET_BOOKING"
    const val KEY_UPDATE_ASSET = "UPDATE_ASSET"
    const val KEY_ASSET_ID = "ASSET_ID"
    const val KEY_TASK_CODE = "TASK_CODE"
    const val KEY_EDIT = "EDIT"
    const val KEY_STATUS = "STATUS"
    const val KEY_POSITION = "POSITION"
    const val KEY_CART_TAX = "CART_TAX"
    const val KEY_ASSET_CATEGORY_ID = "ASSET_CATEGORY_ID"
    const val KEY_VALIDATE_ASSET = "VALIDATE_ASSET"
    const val KEY_BOOKING_REQUEST_ID = "BOOKING_REQUEST_ID"
    const val KEY_GAMING_MACHINE = "GAMING_MACHINE"
    const val KEY_WEAPON_TAX = "WEAPON_TAX"
    const val KEY_MOBICASH_PAYMENT = "KEY_MOBICASH_PAYMENT"
    const val KEY_TAX_NOTICE_HISTORY = "KEY_TAX_NOTICE_HISTORY"
    const val KEY_PROPERTY_TAX_NOTICE_HISTORY = "KEY_PROPERTY_TAX_NOTICE_HISTORY"
    const val KEY_PROPERTY_TAX_PENALTY_WAIVE_OFF = "KEY_PROPERTY_TAX_PENALTY_WAIVE_OFF"
    const val KEY_BUSINESS_TRANSACTION_HISTORY = "KEY_BUSINESS_TRANSACTION_HISTORY"
    const val KEY_INDIVIDUAL_TAX_DETAILS = "INDIVIDUAL_TAX_DETAILS"
    const val KEY_SELECTED_ASSETS = "SELECTED_ASSETS"
    const val KEY_SELECTED_ASSET_CATEGORIES = "SELECTED_ASSET_CATEGORIES"
    const val KEY_ASSETS = "ASSETS"
    const val KEY_ASSET_CATEGORIES = "ASSET_CATEGORIES"
    const val KEY_ASSET_TYPES = "ASSET_TYPES"
    const val KEY_PICK_UP_COUNTRIES = "PICK_UP_COUNTRIES"
    const val KEY_DESTINATION_COUNTRIES = "DESTINATION_COUNTRIES"
    const val KEY_PICK_UP_STATES = "PICK_UP_STATES"
    const val KEY_DESTINATION_STATES = "DESTINATION_STATES"
    const val KEY_PICK_UP_CITIES = "PICK_UP_CITIES"
    const val KEY_DESTINATION_CITIES = "DESTINATION_CITIES"
    const val KEY_PICK_UP_ZONES = "PICK_UP_ZONES"
    const val KEY_DESTINATION_ZONES = "DESTINATION_ZONES"
    const val KEY_PICK_UP_SECTORS = "PICK_UP_SECTORS"
    const val KEY_DESTINATION_SECTORS = "DESTINATION_SECTORS"
    const val KEY_ASSET_RENT_ID = "ASSET_RENT_ID"
    const val KEY_BRANCH_ID = "BRANCH_ID"
    const val KEY_BOOKING_REQUEST_LINE_ID = "BOOKING_REQUEST_LINE_ID"
    const val KEY_QUANTITY = "QUANTITY"
    const val KEY_FROM_DATE = "FROM_DATE"
    const val KEY_TO_DATE = "TO_DATE"
    const val KEY_IS_MOVABLE = "IS_MOVABLE"
    const val KEY_VEHICLE_NO = "VEHICLE_NUMBER"
    const val KEY_PARKING_PLACE_ID = "KEY_PARKING_PLACE_ID"
    const val KEY_DRIVER_ACCOUNT_ID = "DRIVER_ACCOUNT_ID"
    const val KEY_IMPOUNDMENT_RETURN = "IMPOUNDMENT_RETURN"
    const val KEY_LAW_TAX_DETAILS = "LAW_TAX_DETAILS"
    const val KEY_TRACK_ON_TAX_NOTICE_HISTORY = "TRACK_ON_TAX_NOTICE_HISTORY"
    const val KEY_PARKING_TICKET_NOTICE_HISTORY = "PARKING_TICKET_NOTICE_HISTORY"
    const val KEY_PARKING_TICKET_DETAILS = "KEY_PARKING_TICKET_DETAILS"
    const val KEY_IS_VALID_PARKING = "VALID_PARKING"
    const val KEY_PARKING_TAX_DETAILS = "PARKING_TAX_DETAILS"
    const val KEY_DRIVING_LICENSE_NO = "DRIVING_LICENSE_NO"
    const val KEY_VIOLATION_TYPES = "VIOLATION_TYPES"
    const val KEY_POLICE_STATION_YARDS = "POLICE_STATION_YARDS"
    const val KEY_CRANE_TYPES = "CRANE_TYPES"
    const val KEY_VIOLATION_CLASSES = "VIOLATION_CLASSES"
    const val KEY_TICKET_HISTORY = "TICKET_HISTORY"
    const val KEY_VIOLATION_DETAIL = "VIOLATION_DETAIL"
    const val KEY_VIOLATION_TICKET_RESPONSE = "VIOLATION_TICKET_RESPONSE"
    const val KEY_VIOLATIONS = "VIOLATIONS"
    const val KEY_PROPERTY_IMAGE = "PROPERTY_IMAGE"
    const val KEY_PROPERTY_PLAN_IMAGE = "PROPERTY_PLAN_IMAGE"
    const val KEY_TENURE_REQUEST_LINE_ID = "TENURE"
    const val KEY_PROPERTY_OWNER_LIST = "KEY_PROPERTY_OWNER_LIST"
    const val KEY_PROPERTY_NOMINEE_LIST = "KEY_PROPERTY_NOMINEE_LIST"
    const val KEY_PROPERTY_RELATION = "ASSET_BOOKING_LINE"
    const val KEY_PROPERTY_DETAILS = "KEY_PROPERTY_DETAILS"
    const val KEY_PROPERTY_OWNER_DETAILS = "KEY_PROPERTY_OWNER_DETAILS"
    const val KEY_PENDING_PROPERTY_LIST = "KEY_PENDING_PROPERTY_LIST"
    const val KEY_IS_DOC_VERIFICATION_PENDING = "KEY_IS_DOC_VERIFICATION_PENDING"
    const val KEY_IS_PHYSICAL_VERIFICATION_PENDING = "KEY_IS_PHYSICAL_VERIFICATION_PENDING"
    const val KEY_PROPERTY_TAX_OUTSTANDING_WAIVE_OFF = "KEY_PROPERTY_TAX_OUTSTANDING_WAIVE_OFF"
    const val KEY_LAND_TAX_OUTSTANDING_WAIVE_OFF = "KEY_LAND_TAX_OUTSTANDING_WAIVE_OFF"
    const val KEY_PROPERTY_TRANSACTION_HISTORY = "KEY_PROPERTY_TRANSACTION_HISTORY"
    const val KEY_RES_PROP = "RES_PROP"
    const val KEY_COM_PROP = "COM_PROP"
    const val KEY_BUSINESS_PROPERTY_OWNERSHIP = "BUSINESS_PROPERTY_OWNERSHIP"
    const val KEY_SHOW = "KEY_SHOW"
    const val KEY_NUMBER_OF_SHOWS = "NO_OF_SHOWs"
    const val KEY_HOTEL = "KEY_HOTEL"
    const val KEY_NUMBER_OF_HOTELS = "KEY_NUMBER_OF_HOTELS"
    const val KEY_LICENSE_NUMBER="LICENSE_NUMBER"
    const val KEY_FROM_SCREEN="FROM_SCREEN"
    const val KEY_CITIZEN_BUSINESS = "KEY_CITIZEN_BUSINESS"
    const val CITIZEN_BUSINESS = "CITIZEN_BUSINESS"
    const val KEY_STOCK_MANAGEMENT = "STOCK_MANAGEMENT"

    const val LOT = "LOT"
    const val PARCEL = "PARCEL"
    const val SURVEYNO = "SURVEYNO"

    const val KEY_LICENSE = "KEY_LICENSE"
    const val KEY_NUMBER_OF_LICENSES = "KEY_NUMBER_OF_LICENSES"
    const val KEY_SERVICE_TAX="KEY_SERVICE_TAX"
    const val KEY_CARD = "CARD"
    const val COM_PropertyMaster_Unverified="COM_PropertyMaster.Unverified"
    const val COM_PropertyMaster_Inactive="COM_PropertyMaster.Inactive"
    const val KEY_PRODUCT_DETAILS = "PRODUCT_DETAILS"
    const val KEY_PRODUCT_BILLING_CYCLE = "KEY_PRODUCT_BILLING_CYCLE"
    const val KEY_SHOW_PROPORTIONAL_DUTY = "SHOW_PROPORTIONAL_DUTY"
    const val KEY_IMPOUNDMENT_TYPES = "IMPOUNDMENT_TYPES"
    const val KEY_IMPOUNDMENT_SUB_TYPES = "IMPOUNDMENT__SUB_TYPES"
    const val KEY_IMPOUNDMENT_REASONS = "IMPOUNDMENT_REASONS"
    const val KEY_IMPOUNDMENT_VIOLATION_ID = "KEY_IMPOUNDMENT_VIOLATION_ID"

    const val KEY_IMPOUNDMENTS = "IMPOUNDMENTS"
    const val KEY_DISPLAY = "KEY_DISPLAY"
    const val KEY_AGREEMENTNO = "AGREEMENT_NO"
    const val KEY_REFFERENCENO = "REFFERENCE_NO"
    const val KEY_LABEL="label"
    const val KEY_SEC="sec"
    const val KEY_REFRESH="REFRESH"
    const val KEY_REFRESH_VERIFICATION="REFRESH_VERIFICATION"
    const val KEY_IGNORE_CHEQUE_PAYMENT="IGNORE_CHEQUE_PAYMENT"
    const val KEY_STOCK_TRANSFER="STOCK TRANSFER"
    const val KEY_GEO_SPATIAL_VIEW ="GEO_SPATIAL_VIEW"
    const val KEY_STOP_TITLE_RESET = "STOP_TITLE_RESET"
    const val KEY_STOP_API_4_PRINT_ALLOW = "STOP_API_4_PRINT_ALLOW"

    const val REQUEST_CODE_QR = 1101
    const val REQUEST_CODE_CAMERA = 1102
    const val REQUEST_CODE_PAYMENT = 1103
    const val REQUEST_CODE_PAYMENT_SUCCESS = 1104
    const val REQUEST_CODE_PRODUCT_INTEREST = 1105
    const val REQUEST_CODE_ACCOUNT_PHONE = 1106
    const val REQUEST_CODE_ACCOUNT_EMAIL = 1107
    const val REQUEST_CODE_VEHICLE_DETAILS = 1108
    const val REQUEST_CODE_CORPORATE_TURNOVER = 1110
    const val REQUEST_CODE_STORAGE = 1111
    const val REQUEST_CODE_DOCUMENT_ENTRY = 1112
    const val REQUEST_CODE_ACCOUNT_ADDRESSES = 1136
    const val REQUEST_CODE_GENERATE_TAX_NOTICE = 1137
    const val REQUEST_CODE_ADVERTISEMENTS = 1138
    const val REQUEST_CODE_DATE_SELECTION = 1139
    const val REQUEST_CODE_WEAPON_LIST = 1150
    const val REQUEST_CODE_PROPERTY_LIST = 1155
    const val REQUEST_CODE_TAX_PRINT_PAGE = 1151

    const val REQUEST_CODE_DOCUMENTS_LIST = 1113
    const val REQUEST_CODE_TYPE_OF_TAX_LIST = 1114
    const val REQUEST_CODE_ACCOUNT_PHONES_LIST = 1115
    const val REQUEST_CODE_ACCOUNT_EMAILS_LIST = 1116
    const val REQUEST_CODE_ACCOUNT_ADDRESSES_LIST = 1117
    const val REQUEST_CODE_CORPORATE_TURNOVER_LIST = 1118
    const val REQUEST_CODE_PROPERTY_OWNERSHIP_LIST = 1119
    const val REQUEST_CODE_VEHICLE_OWNERSHIP_LIST = 1120
    const val REQUEST_CODE_PUBLIC_DOMAIN_OCCUPANCY_LIST = 1121
    const val REQUEST_CODE_RIGHT_OF_PLACES_LIST = 1122
    const val REQUEST_CODE_NOTES_LIST = 1123
    const val REQUEST_CODE_NOTES_ENTRY = 1124
    const val REQUEST_CODE_OUT_STANDING_ENTRY = 1125
    const val REQUEST_CODE_AGENT_ON_BOARD = 1126
    const val REQUEST_CODE_RENTAL_DETAILS = 1127
    const val REQUEST_CODE_CHANGE_PASSWORD = 1128
    const val REQUEST_CODE_BUSINESS_OWNERSHIP = 1129
    const val REQUEST_CODE_RECHARGE = 1130
    const val REQUEST_CODE_BUSINESS_SUMMARY_APPROVAL = 1131
    const val REQUEST_CODE_LOCATION = 1132
    const val REQUEST_CODE_LOCATION_SETTINGS = 1133
    const val REQUEST_CODE_QR_CODE = 1134
    const val REQUEST_CODE_TAX_COLLECTION = 1135
    const val REQUEST_CODE_BUSINESS_OWNER_SEARCH = 2001
    const val REQUEST_CODE_SCAN_PRODUCT = 2002
    const val REQUEST_CODE_ASSET_INSURANCE_ENTRY = 2003
    const val REQUEST_CODE_ASSET_INSURANCE_LIST = 2004
    const val REQUEST_CODE_ASSET_FITNESS_ENTRY = 2005
    const val REQUEST_CODE_ASSET_FITNESS_LIST = 2006
    const val REQUEST_CODE_ASSET_MAINTENANCE_ENTRY = 2007
    const val REQUEST_CODE_ASSET_MAINTENANCE_LIST = 2008
    const val REQUEST_CODE_ASSET_DOCUMENT_LIST = 2008
    const val REQUEST_CODE_ASSET_BOOKING_LINE = 2004
    const val REQUEST_CODE_SCAN_ASSET = 2005
    const val REQUEST_CODE_ASSET_ASSIGNMENT = 2006
    const val REQUEST_CODE_AGENT_VERIFICATION = 2010
    const val REQUEST_CODE_BUSINESS_VERIFICATION = 2011
    const val REQUEST_CODE_ASSET_NOTES_LIST = 2012
    const val REQUEST_IMAGE_CAPTURE = 0
    const val REQUEST_GALLERY_IMAGE = 1
    const val REQUEST_PHONE_STATE = 2
    const val REQUEST_CODE_PROPERTY_OWNER_SEARCH = 2124
    const val REQUEST_CODE_PROPERTY_NOMINEE_SEARCH = 2125
    const val REQUEST_CODE_PROPERTY_OWNER = 2126
    const val REQUEST_CODE_PROPERTY_NOMINEE = 2127
    const val REQUEST_CODE_PROPERTY_OWNER_LIST = 2128
    const val REQUEST_CODE_SHOWS = 2129
    const val REQUEST_CODE_HOTELS = 2130
    const val REQUEST_CODE_LICENSES = 2131
    const val REQUEST_CODE_ASSET = 2036
    const val USERNAME="username"


    //region New Master RequestCodes
    const val REQUEST_CODE_BUSINESS_OWNER = 2000
    const val REQUEST_CODE_INCIDENT = 2001
    const val REQUEST_CODE_LICENCE_RENEWAL = 2002
    const val REQUEST_CODE_DRIVER_SEARCH = 2013
    const val REQUEST_CODE_VEHICLE_SEARCH = 2017
    const val REQUEST_CODE_DRIVER = 2014
    const val REQUEST_CODE_VIOLATOR = 2015
    const val REQUEST_CODE_VIOLATOR_SEARCH = 2016
    const val REQUEST_CODE_BUSINESS_SEARCH = 2018
    const val REQUEST_CODE_CREATE_VEHICLE = 2019
    const val REQUEST_CODE_VIOLATION_TYPE_LIST = 2020
    const val REQUEST_CODE_VIOLATION_TYPE = 2021
    const val REQUEST_CODE_PROPERTY_IMAGE = 2022
    const val REQUEST_CODE_PROPERTY_GEO = 2023
    const val REQUEST_CODE_PROPERTY_PLAN_IMAGE = 2024
    const val REQUEST_CODE_PROPERTY_DOC_VERIFICATION = 2025
    const val REQUEST_CODE_PROPERTY_PHYSICAL_VERIFICATION = 2026
    const val REQUEST_CODE_PROPERTY_HISTORY = 2027
    const val REQUEST_CODE_BUSINESS_OR_CITIZEN_SEARCH = 2028
    const val REQUEST_CODE_SERVICE_BOOKING_DETAIL = 3468
    const val REQUEST_CODE_ADD_SERVICE = 2029
    const val REQUEST_CODE_EDIT_SERVICE = 2030
    const val REQUEST_CODE_BUSINESS_OWNER_UPDATE = 2031
    const val REQUEST_CODE_SCAN_BUSINESS_OWNER = 2032
    const val REQUEST_CODE_IDENTITY_CARD = 2132
    const val REQUEST_CODE_IDENTITY_CARD_UPDATE = 2133
    const val REQUEST_CODE_IMPOUND_FROM_SEARCH = 2034
    const val REQUEST_CODE_IMPOUND_FROM = 2035
    const val REQUEST_CODE_EXAMPLE = 1490
    const val REQUEST_CODE_ADJUSTMENT = 2036
    const val REQUEST_CODE_STOCKTRANSFER = 2037

    const val REQUEST_CODE_SCANNER = 2038
    const val REQUEST_CODE_BUSINESS_MASTER = 2039



    //endregion
    const val ALLOW_DELETE_Y = "Y"
    const val ACTIVE_Y = "Y"
    const val ACTIVE_N = "N"
    const val PREF_FILE_NAME = BuildConfig.APPLICATION_ID + "_preferences"

    enum class SalesTaxType {
        S, F
    }

    enum class InvoiceTransactionTypeCode(val code: String) {
        IMPOUNDMENT("IMPOUNDMENT"), VIOLATION_TICKETS("VIOLATION_TICKETS")
    }

    enum class PaymentMode {
        CASH, WALLET, MOBICASH, CHEQUE, ORANGE
    }

    enum class ViolationTypeCode(val code: String) {
        VEHICLE("VEHICLE"), CITIZEN("CITIZEN"), BUSINESS("BUSINESS"), ANIMAL("ANIMAL")
    }

    enum class PaymentStatus(val value: String) {
        PAID("PAID"), NEW("ACC_PaymentByCheques.New")
    }

    enum class CheckStatus(val value: String) {
        NEW("ACC_PaymentByCheques.New"), REJECTED("ACC_PaymentByCheques.Rejected"), CLEARED("ACC_PaymentByCheques.Cleared")
    }

    enum class PaymentType {
        TAX, ROP, SALES_TAX, ASSET_BOOKING, TICKET_PAY, PARKING_TICKET_PAY,SERVICE_REQUEST
    }

    enum class LogType {
        EXCEPTION, INFORMATION, PREFERENCE
    }

    enum class AccountTypeCode {
        CRO,
        CUS
    }

    enum class ReceiptType {
        TAX_NOTICE, TAX_RECEIPT, BUSINESS_SUMMARY, BUSINESS_TRANSACTION, TAX_NOTICE_HISTORY,
        AGENT_RECHARGE, INITIAL_OUTSTANDING, LICENSE_RENEWAL, PENALTY_WAIVE_OFF, SALES, ASSET_ASSIGNMENT, ASSET_RETURN, IMPOUND_RETURN,
        BOOKING_REQUEST, INDIVIDUAL_TAX_SUMMARY, BOOKING_ADVANCE, PROPERTY_SUMMARY, PROPERTY_VERIFICATION, SERVICE_BOOKING_ADVANCE, SERVICE_REQUEST_BOOKING_DETAIL,SERVICE_BOOKING
    }

    enum class QuickMenu {
        QUICK_MENU_REGISTER,
        QUICK_MENU_REGISTER_AGENT,
        QUICK_MENU_REGISTER_BUSINESS,
        QUICK_MENU_REGISTER_OWNER,
        QUICK_MENU_UPDATE,
        QUICK_MENU_UPDATE_AGENT,
        QUICK_MENU_VIEW_AGENT,
        QUICK_MENU_UPDATE_BUSINESS,
        QUICK_MENU_UPDATE_OWNER,
        QUICK_MENU_WALLET,
        QUICK_MENU_WALLET_RECHARGE,
        QUICK_MENU_WALLET_HISTORY,
        QUICK_MENU_TAX_COLLECTION,
        QUICK_MENU_TAX_NOTICE,
        QUICK_MENU_INCIDENTS,
        QUICK_MENU_TASKS,
        QUICK_MENU_MY_AGENTS,
        QUICK_MENU_RENTAL_TAX,
        QUICK_MENU_BUSINESS_SUMMARY,
        QUICK_MENU_INDIVIDUAL_TAX_SUMMARY,
        QUICK_MENU_PROPERTY_TAX_SUMMARY,
        QUICK_MENU_LAND_TAX_SUMMARY,
        QUICK_MENU_SALES_TAX,
        QUICK_MENU_SECURITY_TAX,
        QUICK_MENU_STOCK_MANAGEMENT,
        QUICK_MENU_AGENT_SUMMARY_DETAILS,
        QUICK_MENU_VERIFICATION_AGENT,
        QUICK_MENU_VERIFICATION_BUSINESS,
        QUICK_MENU_LICENSE_RENEW,
        QUICK_MENU_NONE,
        QUICK_MENU_ADVERTISEMENTS,
        QUICK_MENU_ASSET_ON_BOARDING,
        QUICK_MENU_UPDATE_ASSET,
        QUICK_MENU_CREATE_ASSET_BOOKING,
        QUICK_MENU_UPDATE_ASSET_BOOKING,
        QUICK_MENU_ASSET_ASSIGNMENT,
        QUICK_MENU_ASSET_RETURN,
        QUICK_MENU_ASSIGN_ASSET,
        QUICK_MENU_BUSINESS_RECORD,
        QUICK_MENU_PROPERTY_RECORD,
        QUICK_MENU_OTHER_TAXES,
        QUICK_MENU_CREATE_CART_TAX,
        QUICK_MENU_UPDATE_CART_TAX,
        QUICK_MENU_CART_TAX,
        QUICK_MENU_GAMING_MACHINE,
        QUICK_MENU_CREATE_GAMING_MACHINE,
        QUICK_MENU_UPDATE_GAMING_MACHINE,
        QUICK_MENU_WEAPON_TAX,
        QUICK_MENU_CREATE_WEAPON_TAX,
        QUICK_MENU_UPDATE_WEAPON_TAX,
        QUICK_MENU_BUSINESS_CREATE_WEAPON_TAX,
        QUICK_MENU_BUSINESS_UPDATE_WEAPON_TAX,
        QUICK_MENU_BUSINESS_CREATE_CART_TAX,
        QUICK_MENU_BUSINESS_UPDATE_CART_TAX,
        QUICK_MENU_BUSINESS_CREATE_GAMING_MACHINE_TAX,
        QUICK_MENU_BUSINESS_UPDATE_GAMING_MACHINE_TAX,
        QUICK_MENU_CORPORATE_TAX_NOTICE,
        QUICK_MENU_INDIVIDUAL_TAX_NOTICE,
        QUICK_MENU_CORPORATE_TAX_COLLECTION,
        QUICK_MENU_INDIVIDUAL_TAX_COLLECTION,
        QUICK_MENU_PROPERTY_TAX_COLLECTION,
        QUICK_MENU_TAX_NOTICE_HISTORY,
        QUICK_MENU_PROPERTY_TAX_NOTICE_HISTORY,
        QUICK_MENU_INDIVIDUAL_TAX_NOTICE_HISTORY,
        QUICK_MENU_CORPORATE_TAX_NOTICE_HISTORY,
        QUICK_MENU_BUSINESS_TRANSACTION_HISTORY,
        QUICK_MENU_INDIVIDUAL_BUSINESS_TRANSACTION_HISTORY,
        QUICK_MENU_CORPORATE_BUSINESS_TRANSACTION_HISTORY,
        QUICK_MENU_PENALTY_WAIVE_OFF,
        QUICK_MENU_CORPORATE_TAX_PENALTY_WAIVE_OFF,
        QUICK_MENU_INDIVIDUAL_TAX_PENALTY_WAIVE_OFF,
        QUICK_MENU_PROPERTY_TAX_PENALTY_WAIVE_OFF,
        QUICK_MENU_OUTSTANDING_WAIVE_OFF,
        QUICK_MENU_CORPORATE_TAX_OUTSTANDING_WAIVE_OFF,
        QUICK_MENU_INDIVIDUAL_TAX_OUTSTANDING_WAIVE_OFF,
        QUICK_MENU_PROPERTY_TAX_OUTSTANDING_WAIVE_OFF,
        QUICK_MENU_RIGHTS_OF_MARKET_PLACES,
        QUICK_MENU_PUBLIC_DOMAIN_OCCUPANCY,
        QUICK_MENU_CORPORATE_TURN_OVER,
        QUICK_MENU_VEHICLE_OWNERSHIP,
        QUICK_MENU_CREATE_CITIZEN,
        QUICK_MENU_VEHICLE_OWNERSHIP_CITIZEN_DOCUMENT,
        QUICK_MENU_VEHICLE_OWNERSHIP_TICKET_ISSUE,
        QUICK_MENU_VEHICLE_TICKET_ISSUE,
        QUICK_MENU_VEHICLE_TICKET_ISSUE_EDIT,
        QUICK_MENU_IMPONDMENT,
        QUICK_MENU_RETURN_IMPONDMENT,
        QUICK_MENU_TICKET_PAYMENT,
        QUICK_MENU_LAW_PENALTY_WAIVE_OFF,
        QUICK_MENU_TRACK_ON_TAX_NOTICE_HISTORY,
        QUICK_MENU_PARKING_VEHICLE_OWNERSHIP,
        QUICK_MENU_VIOLATION_REGISTER_VEHICLE,
        QUICK_MENU_PARKING_VEHICLE_IN,
        QUICK_MENU_PARKING_VEHICLE_OUT,
        QUICK_MENU_PARKING_VEHICLE_OVERSTAY,
        QUICK_MENU_PARKING_COLLECT,
        QUICK_MENU_SAVE_PARKING_AND_COLLECT,
        QUICK_MENU_PARKING_TICKET_HISTORY,
        QUICK_MENU_PARKING_TRANSACTION_HISTORY,
        QUICK_MENU_PARKING_PENALTY_WAIVE_OFF,
        QUICK_MENU_TRACKON_BUSINESS_SUMMARY,
        QUICK_MENU_CREATE_PROPERTY,
        QUICK_MENU_BUSINESS_CREATE_PROPERTY,
        QUICK_MENU_CREATE_LAND,
        QUICK_MENU_PROPERTY_TAX_NOTICE,
        QUICK_MENU_PROPERTY_NOMINEE,
        QUICK_MENU_UPDATE_PROPERTY,
        QUICK_MENU_BUSINESS_UPDATE_PROPERTY,
        QUICK_MENU_BUSINESS_VIEW_PROPERTY,
        QUICK_MENU_BUSSINESS_VEHICLE_OWNERSHIP,
        QUICK_MENU_VERIFY_PROPERTY,
        QUICK_MENU_PROPERTY_TRANSACTION_HISTORY,
        QUICK_MENU_SHOW_TAX,
        QUICK_MENU_HOTEL_TAX,
        QUICK_MENU_UPDATE_LAND,
        QUICK_MENU_LAND_TAX_OUTSTANDING_WAIVE_OFF,
        QUICK_MENU_LAND_TAX_PENALTY_WAIVE_OFF,
        QUICK_MENU_LAND_TAX_NOTICE_HISTORY,
        QUICK_MENU_LAND_TRANSACTION_HISTORY,
        QUICK_MENU_LAND_TAX_NOTICE,
        QUICK_MENU_LAND_TAX_COLLECTION,
        QUICK_MENU_BUSINESS_CREATE_LAND,
        QUICK_MENU_BUSINESS_UPDATE_LAND,
        QUICK_MENU_BUSINESS_VIEW_LAND,
        QUICK_MENU_LICENSE_RENEWAL,
        QUICK_MENU_LICENSE_TAX,
        QUICK_MENU_SERVICE,
        QUICK_MENU_SERVICE_REQUEST_MASTER,
        QUICK_MENU_PENDING_SERVICE_REQUESTS,
        QUICK_MENU_BUSSINESS_VEHICLE_OWNERSHIP_SEARCH,
        QUICK_MENU_HANDOVER_DUE_NOTICES,
        QUICK_MENU_HANDOVER_DUE_IMAGES,
        QUICK_MENU_HANDOVER_SIGNATURE,
        QUICK_MENU_AGREEMENT,
        QUICK_MENU_SIGNATURE,
        QUICK_MENU_IMAGES,
        QUICK_MENU_STOCK_TRANSFER_IMAGES,
        QUICK_MENU_STOCK_MANAGEMENT_IMAGES,

    }

    enum class ScreenMode {
        ADD, EDIT, VIEW
    }

    enum class PropertyStatusCode(val code: String) {
        OPEN("COM_PropertyVerificationRequests.Open"),
        Approved("COM_PropertyVerificationRequests.Approved"),
        Rejected("COM_PropertyVerificationRequests.Rejected")
    }

    enum class NavigationMenu {
        NAVIGATION_MENU_BUSINESS_TRANSACTION_HISTORY,
        NAVIGATION_MENU_TAX_NOTICE_HISTORY,
        NAVIGATION_MENU_MY_AGENTS,
        NAVIGATION_MENU_AGENTS,
        NAVIGATION_MENU_AGENT_COLLECTION_SUMMARY,
        NAVIGATION_MENU_CASH_DEPOSIT_APPROVAL,
        NAVIGATION_COMPLAINT, NAVIGATION_TASK,
        NAVIGATION_LOCATION,
        NAVIGATION_INCIDENT,
        NAVIGATION_PROPERTY,
        NAVIGATION_ONBOARDING,
        NAVIGATION_MENU_SUMMARY_DETAILS,
        NAVIGATION_MENU_SCAN_PRODUCT,
        NAVIGATION_MENU_NONE
    }

    /**
     * Inspector - ISP
     * Supervisor - SPR
     * Municipal Agent	- MCA
     * Parking Municipal Agent -PMA
     * Third Party Agent - TPA
     * Pay Points - PPS
     * Associate member - ASO
     * Associate Agent - ASA
     * LAW Agent - LEA
     * LAW Inspector - LEI
     * LAW Supervisor - LES
     * Sales - SLA*/
    enum class AgentTypeCode {
        ISP, SPR, MCA, TPA, PPS, ASO, ASA, LEA, LEI, LES, PMA, PTA,GCA,LCA,SLA
    }

    enum class PaymentModeCode {
        ORANGE
    }

    enum class TaxInvoices(val Status: String) {
        CANCELLED("SAL_TaxInvoices.Cancelled"), NEW("SAL_TaxInvoices.New")
    }

    enum class ReceiptCode(val code: String) {
        TaxNoticeReceipt("TaxNoticeRecpt")
    }

    enum class OrganizationStatus(val value: String) {
        INACTIVE("CRM_Organizations.Inactive"), ACTIVE("CRM_Organizations.Active"), REJECTED("CRM_Organizations.Rejected")
    }

    enum class AgentStatus(val value: String) {
        INACTIVE("CRM_Agents.Inactive"), ACTIVE("CRM_Agents.Active"), VERIFIED("CRM_Agents.Verified"), REJECTED("CRM_Agents.Rejected")
    }

    enum class TaxNotice(val Type: Int) {
        CME(1), CP(2), ROP(3), PDO(4), ROAD_TAX(5), SALES_TAX(6), ADVERTISEMENT_TAX(7), CART_TAX(8), WEAPON_TAX(9), GAME_TAX(10),
        TICKET_ISSUE(11), IMPOUNDMENT(12), IMPOUNDMENT_RETURN(13), COM_PROP(14), RES_PROP(15), HOTEL(16), SHOW(17), LICENSE(18),
        SERVICE_NOTICE(19)
    }

    enum class TaxReceipt(val Type: Int) {
        CME(101), CP(102), ROP(103), PDO(104), ROAD_TAX(105), LICENSE_RENEWAL(106), RECHARGE(107), SALES_INVOICE(108),
        PENALTY_WAIVE_OFF(109), ADVERTISEMENT(110), INITIAL_OUTSTANDING_PENALTY_WAIVE_OFF(111),
        BOOKING_REQUEST_RECEIPT(112), BOOKING_ADVANCE_RECEIPT(113), CART_RECEIPT(114), WEAPON_RECEIPT(115), GAME_RECEIPT(116),
        ASSET_ASSIGNMENT(117), ASSET_RETURN(118), TICKET_PAYMENT(119), PARKING_TICKET_PAYMENT(120), TICKET_PAYMENT_TRANSACTION(121),
        PROPERTY_COM_PAYMENT_TRANSACTION(122), PROPERTY_RES_PAYMENT_TRANSACTION(123), HOTEL(124), SHOW(125), LICENSE(126),
        SERVICE_BOOKING_ADVANCE(127), SERVICE_REQUEST_BOOKING_DETAIL(128)
    }

    enum class TaxRuleBook(val Code: String) {
        RECHARGE("RECHARGE"),
        LICENSE_RENEWAL("LICENSE_RENEWAL"),
        CP("CP"),
        CME("CME"),
        ROP("ROP"),
        PDO("PDO"),
        CART("CART"),
        WEAPON("WP"),
        GAME("GM"),
        DEFAULT("DEFAULT"),
        SALES("SALES"),
        SECURITY_SALES("SECURITY_SALES"),
        PENALTY_WAIVE_OFF("PENALTY_WAIVE_OFF"),
        OUTSTANDING_WAIVE_OFF("OUTSTANDING_WAIVE_OFF"),
        ADVERTISEMENT("ADV"),
        BOOKING_REQUEST("BOOKING_REQUEST"),
        BOOKING_ADVANCE("BOOKING_ADVANCE"),
        ASSET_ASSIGNMENT("ASSET_ASSIGNMENT"),
        ASSET_RETURN("ASSET_RETURN"),
        VT("VT"),
        IMP("IMP"),
        IMP_RETURN("IMP_RETURN"),
        IMP_RETURN_ANIMAL("IMP_RETURN_ANIMAL"),
        TICKET_PAYMENT("TICKET_PAYMENT"),
        TICKET_PAYMENT_TRANSACTION("TICKET_PAYMENT_TRANSACTION"),
        PARKING_TICKET_PAYMENT("PARKING_TICKET_PAYMENT"),
        COM_PROP("COM_PROP"),
        RES_PROP("RES_PROP"),
        LAND_PROP("LAND_PROP"),
        LAND_CONTRIBUTION("LAND_CONTRIBUTION"),
        SHOW("SHOW"),
        HOTEL("HOTEL"),
        LICENSE("LICENSE"),
        SERVICE("SERVICE"),
        SERVICE_BOOKING_ADVANCE("SERVICE_BOOKING_ADVANCE"),
        SERVICE_REQUEST_BOOKING_DETAIL("SERVICE_REQUEST_BOOKING_DETAIL")
    }

    enum class DynamicFormDataTypes(val value: String) {
        Decimal("Decimal"), Integer("Integer"), Memo("Memo"), Text("Text"), Date("Date"), DateTime("DateTime"), Checkbox("Boolean"), Spinner("Dropdown")
    }



    enum class AssetStatus(val value: String) {
        INACTIVE("AST_Assets.Inactive"), ACTIVE("AST_Assets.Active")
    }

    enum class AssignedZoneSectorCode {
        SZ, AZ, NZ
    }

    enum class DateFormat(val value: String) {
        SERVER("yyyy-MM-dd'T'HH:mm:ss.SSS"),
        DFddMMyyyy("dd-MM-yyyy"),
        DFyyyyMMdd("yyyy-MM-dd"),
        DFyyyyMMddHHmmss("yyyy-MM-dd HH:mm:ss"),
        DFyyyyMMddhhmmaa("yyyy-MM-dd hh:mm aa"),
        DFddMMyyyyhhmmssaa("dd-MM-yyyy hh:mm:ss aa"),
        DFddMMyyyyHHmmss("dd-MM-yyyy HH:mm:ss")
    }

    val df = DecimalFormat("#.##")

    enum class BuildVariant(val value: String) {
        DEV("DEV"),
        QA("QA"),
        UAT("UAT"),
        PROD("PROD"),
    }
    enum class UnitCode{
        SQM,SQY,EA
    }

    enum class ImpoundmentDocument(val value: Int) {
        MultipleDocuments(10001),
        VehicleDocument(10002),
        VehicleOwnerDocument(10003),
        DriverDocument(10004),
        AnimalOwnerDocument(10005),
        ImpoundFromDocument(10006),
    }

    enum class ContraventionDocument(val value: Int) {
        CitizenDocument(10007),
        MultipleDocuments(10008),
        VehicleDocument(10009),
        VehicleOwnerDocument(10010),
        DriverDocument(10011),
    }

    enum class BusinessMode {
        None,
        BusinessActivateVerifyScan,
        BusinessActivate,
        BusinessVerification,
    }

}