import java.util.regex.Matcher
import java.util.regex.Pattern

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.4.21"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

ext {
    // Get the current flavor of the build Ex: uat, prod
    flavor = getCurrentFlavor()
    if (flavor.isEmpty()) {
        flavor = "free"
    }

    // Read the .properties for config
    config = getProps('config/' + flavor + '.properties')
}

def getCurrentFlavor() {
    Gradle gradle = getGradle()

    // match optional modules followed by the task
    // [a-z]+([A-Za-z]+) will capture the flavor part of the task name onward (e.g., assembleDevRelease --> Dev)
    def pattern = Pattern.compile("([A-Z][A-Za-z]+)(Release|Debug)")
    def flavor = ""

    gradle.getStartParameter().getTaskNames().any { name ->
        logger.info("Message")
        Matcher matcher = pattern.matcher(name)
        if (matcher.find()) {
            flavor = matcher.group(1).toLowerCase()
            return true
        }
    }

    return flavor
}

def getProps(path) {
    Properties props = new Properties()
    props.load(new FileInputStream(file(path)))
    return props
}

task clean(type: Delete) {
    delete rootProject.buildDir
}